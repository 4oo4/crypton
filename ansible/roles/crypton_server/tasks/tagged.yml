- name: create unix user
  sudo: yes
  user: >
    state=present
    name=crypton_server
    system=yes
    shell=/bin/false

- name: clone source code
  sudo: yes
  git: >
    repo={{ crypton_source_repository }}
    dest={{ crypton_checkout }}
    version=master

- name: install server node modules
  sudo: yes
  command: >
    npm install
    chdir={{ crypton_checkout }}/server
    creates={{ crypton_checkout }}/server/node_modules

- name: build client dist files
  sudo: yes
  command: >
    make compile
    chdir={{ crypton_checkout }}/client
    creates={{ crypton_checkout }}/client/dist/crypton.js

- name: make vendor dir for upstream static items
  sudo: yes
  file: >
    state=directory
    path=/home/crypton_server/{{ item }}
    owner=crypton_server
    group=www-data
    mode=555
  with_items:
    - vendor
    - vendor/jquery
    - vendor/jquery/1.8.3
    - vendor/jquery/1.10.2

- name: fetch jquery so we can serve it locally
  sudo: yes
  get_url: >
    url=https://ajax.googleapis.com/ajax/libs/jquery/{{ item.version }}/jquery.min.js
    sha256sum={{ item.sha256sum }}
    dest=/home/crypton_server/vendor/jquery/{{ item.version }}/jquery.min.js
    owner=crypton_server
    group=www-data
    mode=444
  with_items:
    - version: 1.8.3
      sha256sum: ba6eda7945ab8d7e57b34cc5a3dd292fa2e4c60a5ced79236ecf1a9e0f0c2d32
    - version: 1.10.2
      sha256sum: 89a15e9c40bc6b14809f236ee8cd3ed1ea42393c1f6ca55c7855cd779b3f922e

- name: copy server secret files
  sudo: yes
  copy: >
    src=secrets/{{ deployment_environment }}/{{ item.src }}
    dest={{ item.dest }}
    mode={{ item.mode|default(400) }}
    owner={{ item.owner|default("root") }}
    group={{ item.group|default("root") }}
  with_items:
    - src: keys/{{ crypton_service.name }}_cookie.key
      dest: /home/crypton_server/{{ crypton_service.name }}_cookie.key
      owner: crypton_server
      group: crypton_server
    - src: certs/{{ crypton_service.domain }}-wildcard.pem
      dest: /etc/nginx/{{ crypton_service.domain }}-wildcard.pem
      group: crypton_server
      mode: 440

- name: write server config file from template
  sudo: yes
  template: >
    src=crypton.conf.json.j2
    dest=/home/crypton_server/{{ crypton_service.name }}.conf.json
    owner=root
    group=crypton_server
    mode=440

- include: runsv_services.yml tags=runit,role_crypton_server

- name: install nginx config
  sudo: yes
  template: >
    src=nginx-site.conf.j2
    dest=/etc/nginx/sites-available/{{ crypton_service.name }}.{{ crypton_service.domain }}.conf
    owner=root
    group=root
    mode=400
  notify: reload nginx

- name: enable nginx config
  sudo: yes
  file: >
    state=link
    src=/etc/nginx/sites-available/{{ crypton_service.name }}.{{ crypton_service.domain }}.conf
    dest=/etc/nginx/sites-enabled/{{ crypton_service.name }}.{{ crypton_service.domain }}.conf
  notify: reload nginx

- meta: flush_handlers
