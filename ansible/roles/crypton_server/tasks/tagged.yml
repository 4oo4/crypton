- name: create unix user
  sudo: True
  user: name=crypton_server
        system=yes shell=/bin/false state=present

- name: clone source code
  sudo: True
  git: repo=https://github.com/SpiderOak/crypton.git
    dest=/home/crypton_server/crypton.git
    version=master

- name: install server node modules
  sudo: yes
  command: npm install
    chdir=/home/crypton_server/crypton.git/server
    creates=/home/crypton_server/crypton.git/server/node_modules

- name: build client dist files
  sudo: yes
  command: make dist/crypton.js
    chdir=/home/crypton_server/crypton.git/client
    creates=/home/crypton_server/crypton.git/client/dist/crypton.js

- name: copy server secret files
  sudo: yes
  copy: src={{item.src}} dest={{item.dest}} 
        mode={{item.mode|default(400)}} 
        owner={{item.owner|default("root")}}
        group={{item.group|default("root")}}
  with_items:
   - src: secrets/{{ deployment_environment }}/id_translator.key
     dest: /home/crypton_server/id_translator.key 
     owner: crypton_server
     group: crypton_server
   - src: secrets/{{ deployment_environment }}/cookie_secret.key
     dest: /home/crypton_server/cookie_secret.key 
     owner: crypton_server
     group: crypton_server
   - src: secrets/{{ deployment_environment }}/{{ crypton_server_domain }}-wildcard.pem
     dest: /etc/nginx/{{ crypton_server_domain }}-wildcard.pem
     group: crypton_server
     mode: 440

- name: debug db
  debug: var=db
  tags: debug

- name: write server config file from template
  sudo: True
  template: src=crypton.conf.json.j2
    dest=/home/crypton_server/crypton.conf.json
    owner=root group=crypton_server mode=440

- name: make vendor dir for upstream static items
  sudo: True
  file: state=directory
   path=/home/crypton_server/vendor/jquery/1.8.3
   owner=crypton_server
   group=www-data
   mode=555

- name: fetch jquery so we can serve it locally
  sudo: True
  get_url: url=https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js
    sha256sum=ba6eda7945ab8d7e57b34cc5a3dd292fa2e4c60a5ced79236ecf1a9e0f0c2d32
    dest=/home/crypton_server/vendor/jquery/1.8.3/jquery.min.js
    owner=crypton_server group=www-data mode=444

# note that nginx does not use /etc/hosts for resolution. but squid does.
- name: add crypton server to /etc/hosts
  sudo: True
  lineinfile: >
   dest=/etc/hosts
   line="{{ ansible_default_ipv4.address }} server.{{crypton_server_domain}}"
   regexp=server.{{crypton_server_domain}}

- include: runsv_services.yml tags=runit,role_crypton_server

- name: install nginx config
  sudo: yes
  template: src={{ crypton_server_domain }}.conf.j2
    dest=/etc/nginx/sites-available/{{ crypton_server_domain }}.conf
    owner=root group=root mode=400
  notify: reload nginx

- name: enable nginx config
  sudo: yes
  file: src=/etc/nginx/sites-available/{{ crypton_server_domain }}.conf
    dest=/etc/nginx/sites-enabled/{{ crypton_server_domain }}.conf
    state=link
  notify: reload nginx

- meta: flush_handlers
