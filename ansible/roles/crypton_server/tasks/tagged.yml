- name: create unix user
  sudo: yes
  user: >
    state=present
    name={{ item.user }}
    system=yes
    shell=/bin/false
  with_items: crypton_apps

- name: clone source code
  sudo: yes
  git: >
    repo={{ item.src_repository|default(crypton_src_repository) }}
    dest={{ item.src_checkout|default('/home/' + item.user + '/crypton') }}
    version={{ item.src_branch|default(crypton_src_branch) }}
  with_items: crypton_apps

- name: install server node modules
  sudo: yes
  command: >
    npm install
    chdir={{ item.src_checkout|default('/home/' + item.user + '/crypton') }}/server
    creates={{ item.src_checkout|default('/home/' + item.user + '/crypton') }}/server/node_modules
  with_items: crypton_apps

- name: build client dist files
  sudo: yes
  command: >
    make compile
    chdir={{ item.src_checkout|default('/home/' + item.user + '/crypton') }}/client
    creates={{ item.src_checkout|default('/home/' + item.user + '/crypton') }}/client/dist/crypton.js
  with_items: crypton_apps

- name: make vendor dir for upstream static items
  sudo: yes
  file: >
    state=directory
    path=/home/{{ item[0].user }}/{{ item[1] }}
    owner={{ item[0].user }}
    group=www-data
    mode=555
  with_nested:
    - crypton_apps
    - - vendor
      - vendor/jquery
      - vendor/jquery/1.8.3
      - vendor/jquery/1.10.2

- name: fetch jquery so we can serve it locally
  sudo: yes
  get_url: >
    url=https://ajax.googleapis.com/ajax/libs/jquery/{{ item[1].version }}/jquery.min.js
    sha256sum={{ item[1].sha256sum }}
    dest=/home/{{ item[0].user }}/vendor/jquery/{{ item[1].version }}/jquery.min.js
    owner={{ item[0].user }}
    group=www-data
    mode=444
  with_nested:
    - crypton_apps
    - - version: 1.8.3
        sha256sum: ba6eda7945ab8d7e57b34cc5a3dd292fa2e4c60a5ced79236ecf1a9e0f0c2d32
      - version: 1.10.2
        sha256sum: 89a15e9c40bc6b14809f236ee8cd3ed1ea42393c1f6ca55c7855cd779b3f922e

- name: copy server cookie keys
  sudo: yes
  copy: >
    src={{ inventory_dir }}/secrets/keys/{{ item.name }}_cookie.key
    dest=/home/{{ item.user }}/{{ item.name }}_cookie.key
    owner={{ item.user }}
    group={{ item.group|default(item.user) }}
    mode=0400
  with_items: crypton_apps

- name: write server config file from template
  sudo: yes
  template: >
    src=crypton.conf.json.j2
    dest=/home/{{ item.user }}/{{ item.name }}.conf.json
    owner=root
    group={{ item.group|default(item.user) }}
    mode=440
  with_items: crypton_apps

- include: runsv_services.yml
    tags=runit,role_crypton_server
    runit_services={{ crypton_apps }}
    common_run_template=run.crypton_server.sh.j2

- name: install nginx config
  sudo: yes
  template: >
    src=nginx-site.conf.j2
    dest=/etc/nginx/sites-available/{{ item.name }}.{{ item.domain|default(crypton_domain) }}.conf
    owner=root
    group=root
    mode=400
  with_items: crypton_apps
  notify: reload nginx

- name: enable nginx config
  sudo: yes
  file: >
    state=link
    src=/etc/nginx/sites-available/{{ item.name }}.{{ item.domain|default(crypton_domain) }}.conf
    dest=/etc/nginx/sites-enabled/{{ item.name }}.{{ item.domain|default(crypton_domain) }}.conf
  with_items: crypton_apps
  notify: reload nginx

- meta: flush_handlers
